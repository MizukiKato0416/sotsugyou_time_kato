//=============================================================================
//
// 風船処理 [balloon.h]
// Author : 加藤瑞葵
//
//=============================================================================
#ifndef _BALLOON_H_
#define _BALLOON_H_

#include "objectModel.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define BALLOON_SIZE				(40.0f)		//風船のサイズ

//*****************************************************************************
//前方宣言
//*****************************************************************************

//*****************************************************************************
// 風船クラス
//*****************************************************************************
class CBalloon : public CObjectModel
{
public:
	CBalloon();	//デフォルトコンストラクタ
	CBalloon(CModel::MODELTYPE typeModel);		//オーバーロードされたコンストラクタ
	~CBalloon();	//デストラクタ
	static CBalloon* Create(bool bGold, D3DXVECTOR3 pos);	//生成処理
	HRESULT Init(void);	//初期化処理
	void Uninit(void);	//終了処理
	void Update(void);	//更新処理
	void Draw(void);	//描画処理

	//総数取得処理
	static int GetNum(void) { return m_nNum; }

private:
	bool CollisionPlayer(void);	//プレイヤーとの当たり判定

	static int m_nNum;	//総数
	bool m_bGold;		//金色にするかどうか
	D3DXVECTOR3 m_move;	//移動量
	bool m_bUp;			//上昇しているかどうか
};

#endif // !_BALLOON_H_