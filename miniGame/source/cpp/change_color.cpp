//=============================================================================
//
// 変化する色処理 [change_color.cpp]
// Author : 鶴間俊樹
//
//=============================================================================
#include "change_color.h"
#include <directxmath.h>

//=============================================================================
// マクロ定義
//=============================================================================

//=============================================================================
// デフォルトコンストラクタ
//=============================================================================
CChangeColor::CChangeColor()
{

}

//=============================================================================
// デストラクタ
//=============================================================================
CChangeColor::~CChangeColor()
{

}

//=============================================================================
// 変化する色の生成処理
//=============================================================================
CChangeColor* CChangeColor::Create(D3DXCOLOR colStart, float fSpeedColorwheel) {
	CChangeColor* pChangeColor;
	pChangeColor = new CChangeColor();
	if (pChangeColor == nullptr) return nullptr;

	//初期化
	pChangeColor->Init();
	pChangeColor->m_col = colStart;
	pChangeColor->m_fSpeedColorwheel = fSpeedColorwheel;

	return pChangeColor;
}

//=============================================================================
// 変化する色の初期化処理
//=============================================================================
void CChangeColor::Init(void) {

}

//=============================================================================
// 変化する色の終了処理
//=============================================================================
void CChangeColor::Uninit(void) {

}

//=============================================================================
// 変化する色の更新処理
//=============================================================================
void CChangeColor::Update(void) {
	//HSLに変換

	//色相を加算

	//RGBに変換
}